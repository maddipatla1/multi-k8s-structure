name: Deploy to ECR
on:
  push:
    branches: [main]
jobs:
  build:
    name: Build dockerImage and deploy to EKS
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: maddi
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -f client/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: maddi
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/multi-client:latest -f ./client/Dockerfile ./client
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/multi-server:latest -f ./server/Dockerfile ./server
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/multi-worker:latest -f ./worker/Dockerfile ./worker
          docker images
          docker push ${{ secrets.DOCKER_REGISTRY }}/multi-client:latest
          docker push ${{ secrets.DOCKER_REGISTRY }}/multi-server:latest
          docker push ${{ secrets.DOCKER_REGISTRY }}/multi-worker:latest
      - name: Set kubeconfig from secret
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$KUBECONFIG" > kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s --kubeconfig kubeconfig.yaml
          kubectl set image deployments/server-deployment server=${{ secrets.DOCKER_REGISTRY }}/multi-server:latest --kubeconfig kubeconfig.yaml
          kubectl set image deployments/client-deployment client=${{ secrets.DOCKER_REGISTRY }}/multi-client:latest --kubeconfig kubeconfig.yaml
          kubectl set image deployments/worker-deployment worker=${{ secrets.DOCKER_REGISTRY }}/multi-worker:latest --kubeconfig kubeconfig.yaml
